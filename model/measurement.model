[core] id (integer),
[core] result (string): The URL that contains the results of this measurement,
[core] group_id (integer): The ID of the measurement group. This ID references a measurement acting as group master,
[core] af (integer) = ['4' or '6']: [Not for wifi] IPv4 of IPv6 Address family of the measurement,
[core] is_oneoff (boolean): Flag indicating this is a one-off measurement,
[core] is_public (boolean): Flag indicating this measurement is a publicly available,
[core] description (string): User-defined description of the measurement,
[core] spread (integer): Distribution of probes' measurements throughout the interval (default is half the interval, maximum 400 seconds),
[core] resolve_on_probe (boolean): Flag that, when set to true, indicates that a name should be resolved (using DNS) on the probe. Otherwise it will be resolved on the RIPE Atlas servers,
[core] start_time (integer): Configured start time (as a unix timestamp),
[core] stop_time (integer): Actual end time of measurement (as a unix timestamp),
[core] type (string) = ['ping' or 'traceroute' or 'dns' or 'sslcert' or 'http' or 'ntp' or 'wifi']: Returns the type of the measurement,
[core] status (measurement status): Returns a JSON object containing `id` and `name` (0: Specified, 1: Scheduled, 2: Ongoing, 4: Stopped, 5: Forced to stop, 6: No suitable probes, 7: Failed, 8: Archived),
[core] is_all_scheduled (boolean): Returns true if all probe requests have made it through the scheduling process.,
[core] participant_count (integer): Number of participating probes,
[core] target_asn (integer): The ASN the IP the target is in,
[core] target_ip (string): The IP Address of the target of the measurement,
[core] creation_time (integer): The creation date and time of the measurement (Defaults to unix timestamp format),
[core] in_wifi_group (boolean): Flag indicating this measurement belongs to a wifi measurement group,
[core] resolved_ips (array[string]): The list of IP addresses returned for the fqdn in the `target` field by the backend infra-structure resolvers,
[core] probes_requested (integer): Number of probes requested, but not necessarily granted to this measurement,
[core] probes_scheduled (integer): Number of probes actually scheduled for this measurement,
[core] group (string): The API URL of the measurement group.,
[core] probes (array[probe]): probes involved in this measurement,
[core] probe_sources (array[probe source]),
[core] participation_requests (array[probe source]),
[ping] interval (integer): Interval between samples from a single probe. Defaults to 240 seconds.,
[ping] packets (integer): The number of packets send in a measurement execution. Value must be between 1 and 16. Default is 3,
[ping] size (integer): size of the data part of the packet, i.e. excluding any IP and ICMP headers. Value must be between 1 and 2048,
[ping] packet_interval (integer): Time between packets in milliseconds. Value must be between 2 and 300000,
[ping] include_probe_id (boolean): Include the probe ID (encoded as ASCII digits) as part of the payload,
[traceroute] interval (integer): Interval between samples from a single probe. Defaults to 900 seconds.,
[traceroute] port (integer): The target port number (TCP only). Defaults to 80,
[traceroute] packets (integer): The number of packets send in a measurement execution. Value must be between 1 and 16. Default is 3,
[traceroute] first_hop (integer): TTL (time to live) of the first hop,
[traceroute] max_hops (integer): Traceroute measurement stops after the hop at which the TTL reaches this value,
[traceroute] paris (integer): The number of paris traceroute variations to try. Zero disables paris traceroute. Value must be between 0 and 64,
[traceroute] size (integer): size of the data part of the packet, i.e. excluding any IP, ICMP, UDP or TCP headers. Value must be between 0 and 2048,
[traceroute] protocol (string) = ['ICMP' or 'UDP' or 'TCP']: Protocol used in measurement,
[traceroute] response_timeout (integer): Response timeout for one packet,
[traceroute] duplicate_timeout (integer): Time to wait (in milliseconds) for a duplicate response after receiving the first response,
[traceroute] hop_by_hop_option_size (integer): Size of an IPv6 hop-by-hop option header filled with NOPs,
[traceroute] destination_option_size (integer): Size of an IPv6 destination option header filled with NOPs,
[traceroute] dont_fragment (boolean): Do not fragment outgoing packets,
[dns] udp_payload_size (integer): Set the DNS0 option for UDP payload size to this value, between 512 and 4096.Defaults to 512),
[dns] use_probe_resolver (boolean): Send the DNS query to the probe's local resolvers (instead of an explicitly specified target),
[dns] set_rd_bit (boolean): Flag indicating Recursion Desired bit was set,
[dns] prepend_probe_id (boolean): Each probe prepends its probe number and a timestamp to the DNS query argument to make it unique,
[dns] protocol (string) = ['UDP' or 'TCP']: Protocol used in measurement. Defaults to UDP,
[dns] retry (integer): Number of times to retry,
[dns] include_qbuf (boolean): include the raw DNS query data in the result. Defaults to false,
[dns] set_nsid_bit (boolean): Flag indicating Name Server Identifier (RFC5001) was set,
[dns] include_abuf (boolean): include the raw DNS answer data in the result. Defaults to true,
[dns] query_class (string) = ['IN' or 'CHAOS']: The `class` part of the query used in the measurement,
[dns] query_argument (string): The `argument` part of the query used in the measurement,
[dns] query_type (string) = ['A' or 'AAAA' or 'ANY' or 'CNAME' or 'DNSKEY' or 'DS' or 'MX' or 'NS' or 'NSEC' or 'PTR' or 'RRSIG' or 'SOA' or 'TXT' or 'SRV' or 'NAPTR' or 'TLSA']: The `type` part of the query used in the measurement,
[dns] set_cd_bit (boolean): Flag indicating DNSSEC Checking Disabled (RFC4035) was set,
[dns] set_do_bit (boolean): Flag indicating DNSSEC OK (RFC3225) was set,
[dns] interval (integer): Interval between samples from a single probe. Defaults to 240 seconds.,
[dns] use_macros (boolean): Allow the use of $p (probe ID), $r (random 16-digit hex string) and $t (timestamp) in the query_argument,
[dns] timeout (integer): Timeout in milliseconds (default: 5000),
[http] interval (integer): Interval between samples from a single probe. Defaults to 1800 seconds.,
[http] extended_timing (boolean): Enable time-to-resolve, time-to-connect and time-to-first-byte measurements,
[http] more_extended_timing (boolean): Include fields added by extended_timing and adds readtiming which reports for each read system call when it happened and how much data was delivered,
[http] header_bytes (integer): Maximum number of bytes in the reponse header, defaults to 0,
[http] method (string) = ['GET' or 'POST' or 'HEAD']: http verb of the measurement request,
[http] path (string): Path of the requested URL,
[http] query_string (string): Optional query parameters of the requested URL,
[http] user_agent (string) = ['RIPE Atlas: https://atlas.ripe.net/']: user agent header field sent in the http request. Always set to 'RIPE Atlas: https//atlas.ripe.net',
[http] max_bytes_read (integer),
[http] version (string) = ['1.0' or '1.1']: http version of measurement request,
[http] port (integer): The target port number Defaults to 80,
[ntp] interval (integer): Interval between samples from a single probe. Defaults to 1800 seconds.,
[ntp] packets (integer): The number of packets send in a measurement execution. Value must be between 1 and 16. Default is 3,
[ntp] timeout (integer): Per packet timeout in milliseconds,
[sslcert] port (integer): The target port number. Defaults to 443,
[sslcert] interval (integer): Interval between samples from a single probe. Defaults to 900 seconds.,
[sslcert] hostname (string): Server Name Indication (SNI) hostname,
[wifi] af (integer) = ['4']: IPv4 of IPv6 Address family of the measurement,
[wifi] ipv4 (boolean): Flag indicating IPv4 measurements are attempted in this group,
[wifi] ipv6 (boolean): Flag indicating IPv6 measurements are attempted in this group,
[wifi] cert (string): Certificate in PEM format,
[wifi] extra_wait (integer): Wait this amount of time before executing measurement commands.,
[wifi] ssid (string) = ['eduroam' or 'guestnet' or 'ripemtg-2.4-74' or 'ripemtg-nat64-2.4-74' or 'phicoh-test-2.4']: Wifi SSID to connect to. Max. 32 characters,
[wifi] key_mgmt (string) = ['WPA-PSK' or 'WPA-EAP']: Authentication mechanism used for the wifi connection. For WPA-PSK `psk` field is also required,for WPA-EAP `eap` and `password` fields are required,
[wifi] eap (string) = ['TTLS' or 'PEAP']: Extensible Authentication Protocol type. Currently only `TTLS` is available,
[wifi] identity (string): Username used for wifi connection. Used for both outer and inner connection if anonymous_identity is omitted,
[wifi] anonymous_identity (string): Username used for outer connection. If omitted the `identity` field is used for the outer connection,
[wifi] phase2 (string) = ['auth=EAP-MSCHAPV2' or 'auth=MSCHAPV2' or 'auth=PAP']: Connection and Authentication directives for the inner connection. Only used for WPA-EAP. Currently only EAP-MSCHAPv2 is available,
[wifi] rssi (boolean): Flag indicating that BSSID radio signal strength will be measured and stored,
[wifi] interval (integer): Interval between samples from a single probe. Defaults to 900 seconds.
